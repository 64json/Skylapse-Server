const crypto = require('crypto');
const concat = require('concat-stream');
const path = require('path');
const { spawn } = require('child_process');
const app = require('../app');

const {
  PORT,
  WEBHOOK_SECRET,
} = process.env;

app.post('/apply_release', (req, res) => {
  req.pipe(concat((data) => {
    const hmac = crypto.createHmac('sha1', WEBHOOK_SECRET);
    const signature_delivered = req.headers['x-hub-signature'];
    const signature_created = 'sha1=' + hmac.update(data).digest('hex');
    if (signature_delivered !== signature_created) return res.status(500).send({});
    res.send({});
    const command = spawn('sh', [path.resolve(__dirname, 'pull.sh')]);
    command.stdout.on('data', data => console.info(data.toString()));
    command.stderr.on('data', data => console.error(data.toString()));
    command.on('exit', code => console.info(`child process exited with code ${code}`));
  }));
});
app.listen(PORT);
console.info(`Listening on port ${PORT}`);